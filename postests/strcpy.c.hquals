qualif SIZE(v:ptr)     : (v + ~a)      < BLOCK_END([v])
qualif SIZE(v:ptr)     : (v + (4 *~a)) < BLOCK_END([v])
qualif LEF(v:int)      : (~A + v)      < BLOCK_END([~A])
qualif SIZE(v:ptr)     : (v + ~a)      < (BLOCK_END([v]) - @m)
qualif SIZE(v:ptr)     : (v + (4 *~a)) < (BLOCK_END([v]) - @m)
qualif LEF(v:int)      : (~A + v)      < (BLOCK_END([~A]) - @m)

