* Merging local inference and full spec inference
  The following things need to be added to the full spec inference
  code:

** DONE Merged version of KS benchmark
** DONE Casts between doubles and ints
** DONE Push POWER through
** DONE Use inferctypes for local inference only
*** DONE Revert to typespec for spec generation
*** DONE Change spec -> store constraints to use store_out instead of store_in
** DONE Speed up qualifier validation
** DONE What's with em3d?
** TODO Fix weird unglobal problems in ADPCM
** TODO Check bounds for tables in ADPCM!
** TODO Can we cut down code duplication...
*** TODO ...by lifting things like apply_unop? (i.e., adding a "lift to const" op?)

** DONE Return an expression -> ctype map
   And change solve to apply the solution to the map.
*** DONE Merge common envs into products
    loc can totally be rolled into env; it's just as static as everything else
    there and always present
** DONE Emit dynamic checks like localInfer
   These should be coming out of inferindices.
** DONE Pull final type checks from localInfer into inferctypes
*** DONE Make sure all locations used in the spec get into the store
    The only (sane) way to do this is using the locs emitted by constraining...
** DONE Use sub for ctvemap, block annots rather than pushing through solve
** DONE Get all regrtests running
** DONE Cheerily delete the localInfer code and merge
** DONE Don't return an env from local shape inference; it never changes
** DONE Better error messages from inferindices
   No more "Failed index constraint [something with index vars]"
** DONE Add annotation support for __array__ attribute types

* Post-Deadline Polish
** TODO Handle bidirectional sequences
   Handy for deferred pointer arithmetic checks
** TODO Add handy macros to lib.h
*** TODO ARRAY for __attribute__ ((array))
*** TODO BOUNDS for checking array bounds
    We should be able to annotate pointers for checking (or maybe for
    *not checking*) rather than sprinkling validptr calls all over the
    place.
** TODO Soundly drop vararg functions?
   Or at least degrade gracefully:
*** Havoc heap contents?
*** True'd-out return value
*** ...or just ignore with a stern warning?
*** ...or allow an annotation that lets us ignore a statement and barf on varargs?
** TODO Make && in assert work right
   cil blows it out into a temp + ITE + assignments(!)
** TODO Make exit(n) do the proper thing to the CFG
   Right now it just acts like exit will return, so we can't use exit
   to make assumptions
** TODO Figure out why validptr error lines are start of block, not location of call
