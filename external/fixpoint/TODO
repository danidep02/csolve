Adding Type Constructors To Fixpoint
 
  type loc = 
      | Loc  of string 
      | Lvar of int
      | LFun 

  type t =
      | Int
      | Bool
      | Obj
      | Var of int              (* type-var *)
      | Ptr of loc              (* c-pointer *)
      | Func of int * t list    (* type-var-arity, in-types @ [out-type] *)
      | Num                     (* kind, for numeric tyvars -- ptr(loc(s)) -- *)

    type sub = { locs: (int * string) list; 
                 vars: (int * t) list; }

1. Update types 

2. Write: val t_app : tycon 


3. Extend:
    , Sort.compat
    , Sort.unify
    , Sort.apply
    , Ast.sortcheck_pred
    , Ast.sortcheck_expr

HEREHEREHEREHERE

4. Extend parser

5. Re-run C regressions.

6. Re-run Hs regressions.
7. Re-write/Run Hs List tests (tests/pos/meas5.hs)
