qualif SZ(v:ptr)    : BLOCK_END([v]) = BLOCK_BEGIN([v]) + (2 * @nsa)
qualif SZ(v:ptr)    : (2 * (BLOCK_END([v]) - BLOCK_BEGIN([v]))) = @nsa
qualif A(v:ptr) : (2 * (v - @out)) = ((@buf - 1) + @nsa - @len)
qualif A(v:ptr) : (2 * (v - @out)) = ((0 - @buf) + @nsa - (@len - 1))
qualif A(v:ptr) : (2 * (v - @inp)) = ((@buf) + @nsa - @len)
qualif A(v:ptr) : (2 * (v - @inp)) = ((1 - @buf) + @nsa - (@len - 1))
qualif A(v:int) : v <= 1
qualif A(v:ptr) : (v - ~A) = 2 * (@nsa - @len)
qualif NUM(v:int) : v <= 4
qualif NUM(v:int) : v <= 6
qualif NUM(v:int) : v <= 7
qualif NUM(v:int) : v <= 8
qualif NUM(v:int) : v <= 15