qualif NODESZ(v:ptr) : BLOCK_BEGIN([v]) + 24 <= BLOCK_END([v])
qualif NODESZ(v:ptr) : (v != 0) => (BLOCK_BEGIN([v]) + 24 <= BLOCK_END([v]))

qualif NODEID(v:ptr) : (v != 0) => ((4*(DEREF([v]) : int)) = ((VVADDR - BLOCK_BEGIN([VVADDR])) : int))

qualif INTARR(v:ptr) : v + (4 * (~i+1)) <= BLOCK_END([v])

qualif SZLTONE(v:int) : v < (@sz - 1)

qualif PERMARR(v: int): && [v >= 0; v < ~sz]

qualif NNSIZE(v: ptr) : (v != 0) => (v + (4 * ~i) <= BLOCK_END([v]))
qualif LSTPTR(v: ptr) : v = BLOCK_BEGIN([v]) + (4 * _)
qualif LSTPTR(v: ptr) : v = BLOCK_BEGIN([v]) + 4
qualif LSTPTR(v: ptr) : v = BLOCK_BEGIN([v]) + 8
qualif LSTPTR(v: ptr) : v = BLOCK_BEGIN([v]) + 12
qualif LSTPTR(v: ptr) : v = BLOCK_BEGIN([v]) + 16
qualif LSTPTR(v: ptr) : v = BLOCK_BEGIN([v]) + 20
